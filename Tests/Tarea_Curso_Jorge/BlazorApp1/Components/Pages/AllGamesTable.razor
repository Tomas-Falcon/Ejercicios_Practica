@page "/"
@using System.Text.Json
@using System.Text
@rendermode InteractiveServer
@inject NavigationManager NavigationManager

<h1>Listar todos los juegos</h1>

@if (juegos == null)
{
    <p><em>Cargando...</em></p>
}
else
{

    <table class="table">
        <thead>
            <tr>
                <th>Titulo</th>
                <th>Puntuacion</th>
                <th>Precio</th>
                <th>A</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var juego in juegos)
            {
                <tr>
                    <td>@juego.Titulo</td>
                    <td>@juego.Puntuacion</td>
                    <td>@juego.Precio</td>
                    <td>
                        <button class="btn btn-primary" @onclick="()=> Update(juego)">
                            @* <NavLink class="nav-link" href="EditGame"> *@
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pen" viewBox="0 0 16 16">
                                    <path d="m13.498.795.149-.149a1.207 1.207 0 1 1 1.707 1.708l-.149.148a1.5 1.5 0 0 1-.059 2.059L4.854 14.854a.5.5 0 0 1-.233.131l-4 1a.5.5 0 0 1-.606-.606l1-4a.5.5 0 0 1 .131-.232l9.642-9.642a.5.5 0 0 0-.642.056L6.854 4.854a.5.5 0 1 1-.708-.708L9.44.854A1.5 1.5 0 0 1 11.5.796a1.5 1.5 0 0 1 1.998-.001m-.644.766a.5.5 0 0 0-.707 0L1.95 11.756l-.764 3.057 3.057-.764L14.44 3.854a.5.5 0 0 0 0-.708z" />
                                </svg>
                                Actualizar
                            @* </NavLink> *@
                        </button>

                        <button class="btn btn-danger" @onclick="()=> Delete(juego)">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash" viewBox="0 0 16 16">
                                <path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0z" />
                                <path d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4zM2.5 3h11V2h-11z" />
                            </svg>
                            Borrar
                        </button>

                    </td>
                </tr>
            }
        </tbody>
    </table>
    <br />

    <h1>Juegos por nombre</h1>

    <input type="text" @bind="nameText" />

    <button class="btn btn-primary" @onclick="SearchByName">Buscar</button>

    @if (juegos1 == null)
    {
        <p><em>Cargando, esperando por un nombre. . . </em></p>
    }
    else if (juegos1.Count == 0)
    {
        <p>Juego no encontrado..</p>
    }
    else
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Titulo</th>
                    <th>Puntuacion</th>
                    <th>Precio</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var juego in juegos1)
                {
                    <tr>
                        <td>@juego.Titulo</td>
                        <td>@juego.Puntuacion</td>
                        <td>@juego.Precio</td>
                    </tr>
                }
            </tbody>
        </table>
    }

}


@code {
    private List<Games> juegos;
    

    protected override async Task OnInitializedAsync()
    {
        var a = new ApiService();
        juegos = await a.GetDataAsync("AllGames");
    }

    protected void Update(Games game)
    {
        string jsonString = JsonSerializer.Serialize(game);
        string base64String = Convert.ToBase64String(Encoding.UTF8.GetBytes(jsonString));
        NavigationManager.NavigateTo($"/EditGame/{base64String}");
    }

    protected void Delete(Games game)
    {
        string jsonString = JsonSerializer.Serialize(game);
        string base64String = Convert.ToBase64String(Encoding.UTF8.GetBytes(jsonString));
        NavigationManager.NavigateTo($"/DeleteById/{base64String}");
    }


    private string nameText = "";
    private List<Games> juegos1;

    private async Task SearchByName()
    {
        if (string.IsNullOrWhiteSpace(nameText))
        {
            //TODO hacer un mensaje para el usuario
            return;
        }
        var a = new ApiService();
        juegos1 = await a.GetDataAsync("ExistGame", nameText);
    }

}